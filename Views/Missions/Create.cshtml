@model LMSweb.ViewModel.MissionCreateViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_TeacherLayout.cshtml";
}
<div class="cardArticle">
    <h4>@Model.CName</h4>
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="https://localhost:44301/Missions?CID=@Model.CID">任務列表</a></li>
            <li class="breadcrumb-item active" aria-current="page">新增任務</li>
        </ol>
    </nav>
</div>
<div class="article">
    <h4><b>新增任務</b></h4>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="mb-3">
                @*@Html.LabelFor(model => model.mission.MID, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-7">
                    @Html.HiddenFor(model => model.mission.MID, new { @class = "form-control", @Value = "M" + DateTime.Now.ToString("yyMMddHHmmss") })
                    @Html.ValidationMessageFor(model => model.mission.MID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="mb-3">
                @Html.LabelFor(model => model.mission.MName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-5">
                    @Html.EditorFor(model => model.mission.MName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.mission.MName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="mb-3">
                @Html.LabelFor(model => model.mission.MDetail, htmlAttributes: new { @class = "control-label col-md-2" })
                @*<div class="col-md-10">

                        @Html.TextAreaFor(model => model.mission.MDetail, 10, 120, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.mission.MDetail, "", new { @class = "text-danger" })
                    </div>*@
                <div class="col-5">
                    <textarea class="form-control" id="mission_MDetail" name="mission.MDetail"></textarea>
                </div>
            </div>
            <div class="mb-3">
                @Html.LabelFor(model => model.mission.Start, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-5">
                    
                    <input type="datetime-local" data-bs-target="#Start" class = "form-control" id="mission_Start" name="mission.Start" >
                    @*@Html.EditorFor(model => model.mission.Start, new { htmlAttributes = new { @class = "form-control datepicker-input", data_target = "#datepicker_start" } })*@
                    @Html.ValidationMessageFor(model => model.mission.Start, "", new { @class = "text-danger" })
                    @*<div class="input-group-append" data-target="#datepicker_start" data-toggle="datepicker">
                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                    </div>*@

                </div>
            </div>
             
            <div class="mb-3">
                @Html.LabelFor(model => model.mission.End, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-5">
                    <input type="datetime-local" class="form-control" id="mission_End" name="mission.End">
                    @*@Html.EditorFor(model => model.mission.End, new { htmlAttributes = new { @class = "form-control datepicker-input", data_target = "#datepicker_end" } })*@
                    @Html.ValidationMessageFor(model => model.mission.End, "", new { @class = "text-danger" })
                    @*<div class="input-group-append" data-target="#datepicker_end" data-toggle="datepicker">
                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                    </div>*@
                </div>
            </div>



            @Html.LabelFor(model => model.mission.relatedKP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="input-group mb-3">
                <div class="col-5">
                    <div class="row justify-content-between">
                        <div class="col-10">
                            @Html.ListBoxFor(model => model.SelectKnowledgeList, Model.KnowledgeList, htmlAttributes: new { @class = "form-control selectpicker", multiple = "", @data_live_search = "true", @data_live_search_placeholder = "輸入知識點關鍵字", title = "請選擇知識點..." })
                        </div>
                        <div class="col-2">
                            <input type="button" value="管理知識點" onclick="myFunction()" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            </div>

            <br />
            <label class="mb-3">總成績權重調整 : </label>
            <div class="container">
                
                <div class="row">
                    <div class="col">
                        <div class="row">
                           合作學習權重 :
                            <div class="col-5">
                                <input type="text" class="form-control" placeholder="請填0~100" id="mission_discuss_k" name="mission.discuss_k" />
                            </div>%
                        </div>
                    </div>
                    <div class="col">
                        <div class="row">
                            個人表現權重 :
                            <div class="col-5">
                                <input type="text" class="form-control" placeholder="請填0~100" id="mission_per_k" name="mission.per_k" />
                            </div>%
                        </div>
                    </div>
                    <div class="col">
                        <div class="row">
                            小組成果權重 :
                            <div class="col-5">
                                <input type="text" class="form-control" placeholder="請填0~100" id="mission_group_k" name="mission.group_k" />
                            </div>%
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="mb-3">
                <div class="col-5">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.mission.AddMetacognition)
                        @Html.ValidationMessageFor(model => model.mission.AddMetacognition, "", new { @class = "text-danger" })加入後設認知
                    </div>
                    @*<input type="submit" value="設定題目" class="btn btn-primary" onclick="location.href='@Url.Action("Index", "Questions" , new { cid = Model.CID, mid = Model.mission.MID })'"/>*@
                </div>
            </div>
            <div class="mb-3">
                <div class="col">
                    <input type="submit" value="送出" class="btn btn-primary" />
                    <input type="button" value="取消" class="btn btn-secondary" onclick="location.href='@Url.Action("Index", "Missions" , new { cid = Model.CID })'" />
                </div>
            </div>


        </div>
    }
</div>
@section scripts
{
    <script>
        $(function () {
            $('#SelectKnowledgeList').on('shown.bs.select', function (e) {
                $('#SelectKnowledgeList').empty();
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("GetKnowledgeJSON", "Missions", new { cid = Model.CID})',
                    dataType: "json",
                    success: function (response) {
                        console.log(response);
                        //var options = []
                        $.each(response['Data'], function (index, item) {
                            $('#SelectKnowledgeList').append('<option value="' + item.Value + '">' + item.Text + '</option>');
                        });
                        $('#SelectKnowledgeList').selectpicker('refresh');
                    },
                    error: function (thrownError) {
                        console.log(thrownError);
                    }
                });
            });
        })
        function myFunction() {
            const myWindow = window.open('@Url.Action("Index", "KnowledgePoints", new { CID = Model.CID})', "", "width=600,height=600");
        }
        function kpListReLoad() {
            var kps = $(this).next('.cities'); // get the associated cities dropdownlist
            cities.empty(); // clear existing options
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetKnowledgeJSON", "Missions")',
                dataType: "json",
                success: function (response) {
                    console.log(response);
                    var options = []
                    $.each(response['Data'], function (index, item) {
                        options.append($('<option</option>').val(item.value).html(item.Text));
                    });
                },
                error: function (thrownError) {
                    console.log(thrownError);
                }
            });
        }

        $('#kpModal').on('show.bs.modal', function (event) {
            var modal = $(this)
            var text = ''
            $("input[name='all_student']").each(function () {
                if ($(this).prop("checked")) {
                    text += $(this).attr('id') + '<br/>';
                }
            });

        });
        function dateFormat() {
            let Start = $('#Start').val()
            if (Start.indexOf('T') != -1) {
                Start = Start.replace('T', ' ')
                $('#Start').val(Start)
            }
        }

    </script>

}
@model LMSweb.ViewModel.MissionCreateViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_TeacherLayout.cshtml";
}
<div class="cardArticle">
    <h4>@Model.CName</h4>
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="https://localhost:44301/Missions?CID=@Model.CID">任務列表</a></li>
            <li class="breadcrumb-item active" aria-current="page">新增任務</li>
        </ol>
    </nav>
</div>
<div class="article">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="mb-3">
                @Html.LabelFor(model => model.mission.MID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-7">
                    @Html.EditorFor(model => model.mission.MID, new { htmlAttributes = new { @class = "form-control", @Value = "M" + DateTime.Now.ToString("yyMMddHHmmss") } })
                    @Html.ValidationMessageFor(model => model.mission.MID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.mission.Start, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-7">
                    <div class="input-group date" id="datepicker_start" data-target-input="nearest">
                        @Html.EditorFor(model => model.mission.Start, new { htmlAttributes = new { @class = "form-control datepicker-input", data_target = "#datepicker_start" } })
                        @Html.ValidationMessageFor(model => model.mission.Start, "", new { @class = "text-danger" })
                        <div class="input-group-append" data-target="#datepicker_start" data-toggle="datepicker">
                            <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.mission.End, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-7">
                    <div class="input-group date" id="datepicker_end" data-target-input="nearest">
                        @Html.EditorFor(model => model.mission.End, new { htmlAttributes = new { @class = "form-control datepicker-input", data_target = "#datepicker_end" } })
                        @Html.ValidationMessageFor(model => model.mission.End, "", new { @class = "text-danger" })
                        <div class="input-group-append" data-target="#datepicker_end" data-toggle="datepicker">
                            <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.mission.MName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-7">
                    @Html.EditorFor(model => model.mission.MName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.mission.MName, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.LabelFor(model => model.mission.relatedKP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="input-group mb-3">
                <div style="width: 635px;">
                    <div class="row justify-content-between">
                        <div class="col-10">
                            @Html.ListBoxFor(model => model.SelectKnowledgeList, Model.KnowledgeList, htmlAttributes: new { @class = "form-control selectpicker", multiple = "", @data_live_search = "true", @data_live_search_placeholder = "輸入知識點關鍵字", title = "請選擇知識點..." })
                        </div>
                        <div class="col-2 align-self-end">
                            <input type="button" value="管理知識點" onclick="myFunction()" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="mb-3">
                @Html.LabelFor(model => model.mission.MDetail, htmlAttributes: new { @class = "control-label col-md-2" })
                @*<div class="col-md-10">

                    @Html.TextAreaFor(model => model.mission.MDetail, 10, 120, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.mission.MDetail, "", new { @class = "text-danger" })
                </div>*@
                <div class="form-floating">
                    <textarea class="form-control" id="mission_MDetail" style="width: 645px;height: 100px;"></textarea>
                </div>
            </div>
            <div class="card" style="background: #F0F0F2; border: 1px solid #dee2e6; border-color: #cdcdcd; width: 1000px; padding:5px 5px 5px 5px;">
                <label>合作成績權重</label>
                <div class="row justify-content-start">
                    <label for="colFormLabelSm" class="col col-form-label">討論權重 : </label>
                    <div class="col-2">
                        <input type="text" class="form-control" placeholder="0~100" id="mission_discuss_k" name="mission.discuss_k" />
                    </div>
                    <label for="colFormLabelSm" class="col-2 col-form-label">規劃權重 : </label>
                    <div class="col-2">
                        <input type="text" class="form-control" placeholder="0~100" id="mission_chart_k" name="mission.chart_k" />
                    </div>
                    <label for="colFormLabelSm" class="col col-form-label">撰寫權重 : </label>
                    <div class="col-2">
                        <input type="text" class="form-control" placeholder="0~100" id="mission_code_k" name="mission.code_k" />
                    </div>
                </div>
            </div>
            <br />
            <div class="card" style="background: #F0F0F2; border: 1px solid #dee2e6; border-color: #cdcdcd; width: 1000px; padding:5px 5px 5px 5px;">
                <label>總成績權重</label>
                <div class="row row justify-content-start">
                    <label for="colFormLabelSm"  class="col-2 col-form-label">合作分數權重 : </label>
                    <div class="col-2">
                        <input type="text" class="form-control" placeholder="0~100" id="mission_eva_k" name="mission.eva_k" />
                    </div>
                    <label for="colFormLabelSm" class="col-2 col-form-label">個人分數權重 : </label>
                    <div class="col-2">
                        <input type="text" class="form-control" placeholder="0~100" id="mission_per_k" name="mission.per_k" />
                    </div>
                    <label for="colFormLabelSm" class="col-2 col-form-label">小組分數權重 : </label>
                    <div class="col-2">
                        <input type="text" class="form-control" placeholder="0~100" id="mission_group_k" name="mission.group_k" />
                    </div>
                </div>
            </div>
            
            <br />
            <div class="mb-3">
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.mission.AddMetacognition)
                        @Html.ValidationMessageFor(model => model.mission.AddMetacognition, "", new { @class = "text-danger" })加入後設認知
                    </div>
                </div>
            </div>
            <div class="mb-3">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="確定新增" class="btn btn-primary" />
                </div>
            </div>


        </div>
     }
</div>
@section scripts
{
    <script>
        $(function () {
            $('#SelectKnowledgeList').on('shown.bs.select', function (e) {
                $('#SelectKnowledgeList').empty();
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("GetKnowledgeJSON", "Missions", new { cid = Model.CID})',
                    dataType: "json",
                    success: function (response) {
                        console.log(response);
                        //var options = []
                        $.each(response['Data'], function (index, item) {
                            $('#SelectKnowledgeList').append('<option value="' + item.Value + '">' + item.Text + '</option>');
                        });
                        $('#SelectKnowledgeList').selectpicker('refresh');
                    },
                    error: function (thrownError) {
                        console.log(thrownError);
                    }
                });
            });
        })
        function myFunction() {
            const myWindow = window.open('@Url.Action("Details", "Course", new { CID = Model.CID})', "", "width=800,height=800");
        }
        function kpListReLoad() {
            var kps = $(this).next('.cities'); // get the associated cities dropdownlist
            cities.empty(); // clear existing options
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetKnowledgeJSON", "Missions")',
                dataType: "json",
                success: function (response) {
                    console.log(response);
                    var options = []
                    $.each(response['Data'], function (index, item) {
                        options.append($('<option</option>').val(item.value).html(item.Text));
                    });
                },
                error: function (thrownError) {
                    console.log(thrownError);
                }
            });
        }

        $('#kpModal').on('show.bs.modal', function (event) {
            var modal = $(this)
            var text = ''
            $("input[name='all_student']").each(function () {
                if ($(this).prop("checked")) {
                    text += $(this).attr('id') + '<br/>';
                }
            });

        });
    </script>
    <script type="text/javascript">
        var check_start_Exist = setInterval(function () {
            if ($('#datepicker_start').length) {
                console.log("Exists!");
                $('#datepicker_start').datepicker({
                    icons: {
                        time: "fa fa-clock-o",
                        date: "fa fa-calendar",
                        up: "fa fa-arrow-up",
                        down: "fa fa-arrow-down"
                    }
                });
                clearInterval(check_start_Exist);
            }
        }, 100); // check every 100ms

        var check_end_Exist = setInterval(function () {
            if ($('#datepicker_end').length) {
                console.log("Exists!");
                $('#datepicker_end').datepicker({
                    icons: {
                        time: "fa fa-clock-o",
                        date: "fa fa-calendar",
                        up: "fa fa-arrow-up",
                        down: "fa fa-arrow-down"
                    }
                });
                clearInterval(check_end_Exist);
            }
        }, 100); // check every 100ms

    </script>
}
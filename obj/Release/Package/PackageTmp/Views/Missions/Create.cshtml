@model LMSweb.ViewModel.MissionCreateViewModel

@{
    Layout = "~/Views/Shared/_CoursesLayout.cshtml";
}


<div class="article">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h5>新增任務</h5>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.mission.MID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mission.MID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mission.MID, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.mission.Start, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mission.Start, new { htmlAttributes = new { @class = "form-control " } })
                @Html.ValidationMessageFor(model => model.mission.Start, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.mission.Start, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group date" id="datetimepicker_start" data-target-input="nearest">
                    @*<input type="text" class="form-control datetimepicker-input" data-target="#datetimepicker9" />*@
                    @*@Html.EditorFor(model => model.mission.Start, new { htmlAttributes = new { @class = "form-control datetimepicker-input", data_target = "#datetimepicker9" } })*@
                    @Html.EditorFor(model => model.mission.Start, new { htmlAttributes = new { @class = "form-control datetimepicker-input", data_target = "#datetimepicker_start" } })
                    @Html.ValidationMessageFor(model => model.mission.Start, "", new { @class = "text-danger" })
                    <div class="input-group-append" data-target="#datetimepicker_start" data-toggle="datetimepicker">
                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                    </div>
                </div>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.mission.End, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group date" id="datetimepicker_end" data-target-input="nearest">
                    @Html.EditorFor(model => model.mission.End, new { htmlAttributes = new { @class = "form-control datetimepicker-input", data_target = "#datetimepicker_end" } })
                    @Html.ValidationMessageFor(model => model.mission.End, "", new { @class = "text-danger" })
                    <div class="input-group-append" data-target="#datetimepicker_end" data-toggle="datetimepicker">
                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.mission.MName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mission.MName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mission.MName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.mission.MDetail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mission.MDetail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mission.MDetail, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.mission.CID, "CID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.mission.CID, (SelectList)ViewBag.CID, htmlAttributes: new { @class = "form-control selectpicker", @data_live_search = "true", title = "請選擇課程..." })
                @Html.ValidationMessageFor(model => model.mission.CID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.mission.KnowledgePoints, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.SelectKnowledgeList, Model.KnowledgeList, htmlAttributes: new { @class = "form-control selectpicker", multiple = "", @data_live_search = "true", title = "請選擇知識點..." })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.prompt.PContent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.prompt.PContent, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.prompt.PContent, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.CID, htmlAttributes: new { @value = Model.CID })
        @Html.HiddenFor(model => model.CName, htmlAttributes: new { @value = Model.CName })

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>

        @*<div class="input_fields_wrap">
            <button class="add_field_button">Add More Fields</button>
            <div><input type="text" name="mytext[]"></div>
        </div>*@
    </div>
    }

    <div>
        @Html.ActionLink("返回任務", "Index", new { cid = Model.CID })
    </div>


</div>

<script type="text/javascript">
    var check_start_Exist = setInterval(function () {
        if ($('#datetimepicker_start').length) {
            console.log("Exists!");
            $('#datetimepicker_start').datetimepicker({
                icons: {
                    time: "fa fa-clock-o",
                    date: "fa fa-calendar",
                    up: "fa fa-arrow-up",
                    down: "fa fa-arrow-down"
                }
            });
            clearInterval(check_start_Exist);
        }
    }, 100); // check every 100ms           

    var check_end_Exist = setInterval(function () {
        if ($('#datetimepicker_end').length) {
            console.log("Exists!");
            $('#datetimepicker_end').datetimepicker({
                icons: {
                    time: "fa fa-clock-o",
                    date: "fa fa-calendar",
                    up: "fa fa-arrow-up",
                    down: "fa fa-arrow-down"
                }
            });
            clearInterval(check_end_Exist);
        }
    }, 100); // check every 100ms  

    //$(document).ready(function () {
    //    var max_fields = 10; //maximum input boxes allowed
    //    var wrapper = $(".input_fields_wrap"); //Fields wrapper
    //    var add_button = $(".add_field_button"); //Add button ID

    //    var x = 1; //initlal text box count
    //    $(add_button).click(function (e) { //on add input button click
    //        e.preventDefault();
    //        if (x < max_fields) { //max input box allowed
    //            x++; //text box increment
    //            $(wrapper).append('<div><input type="text" name="mytext[]"/><a href="#" class="remove_field">Remove</a></div>'); //add input box
    //        }
    //    });

    //    $(wrapper).on("click", ".remove_field", function (e) { //user click on remove text
    //        e.preventDefault(); $(this).parent('div').remove(); x--;
    //    })
    //});
</script>

